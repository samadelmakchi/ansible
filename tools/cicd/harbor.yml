version: '3.8'

services:
  harbor-db:
    image: postgres:12
    container_name: harbor-db
    environment:
      POSTGRES_DB: harbor
      POSTGRES_USER: harbor
      POSTGRES_PASSWORD: password
    volumes:
      - harbor-db-data:/var/lib/postgresql/data
    networks:
      - harbor
      - traefik_reverse_proxy

  harbor-core:
    image: goharbor/harbor-core:v2.6.0
    container_name: harbor-core
    environment:
      - CORE_SECRET=secret
    depends_on:
      - harbor-db
    networks:
      - harbor
      - traefik_reverse_proxy
    restart: always

  harbor-portal:
    image: goharbor/harbor-portal:v2.6.0
    container_name: harbor-portal
    networks:
      - harbor
      - traefik_reverse_proxy
    restart: always
    ports:
      - "9010:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.harbor-portal.rule=Host(`harbor.elmakchi.ir`)"
      - "traefik.http.routers.harbor-portal.entrypoints=websecure"
      - "traefik.http.routers.harbor-portal.tls.certresolver=myresolver"
      - "traefik.http.services.harbor-portal.loadbalancer.server.port=80"

  harbor-registry:
    image: goharbor/harbor-registryctl:v2.6.0
    container_name: harbor-registry
    networks:
      - harbor
      - traefik_reverse_proxy
    restart: always

  harbor-log:
    image: goharbor/harbor-log:v2.6.0
    container_name: harbor-log
    networks:
      - harbor
      - traefik_reverse_proxy
    restart: always

  harbor-jobservice:
    image: goharbor/harbor-jobservice:v2.6.0
    container_name: harbor-jobservice
    depends_on:
      - harbor-db
    networks:
      - harbor
      - traefik_reverse_proxy
    restart: always

  harbor-registryctl:
    image: goharbor/harbor-registryctl:v2.6.0
    container_name: harbor-registryctl
    networks:
      - harbor
      - traefik_reverse_proxy
    restart: always

networks:
  harbor:
    driver: bridge
  traefik_reverse_proxy:
    external: true

volumes:
  harbor-db-data:
  harbor-certs:
