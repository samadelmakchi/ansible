# کانفیگ و نصب ابزارهای سرور
- name: Configuring and installing server tools
  hosts: localhost
  become: true

  tasks:
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ساخت پوشه برنامه
    # ایجاد پوشه project_path اگر وجود نداشت
    - name: Ensure project_path directory exists
      ansible.builtin.file:
        path: "{{ project_path }}"
        state: directory
        mode: '0777'
      poll: 1

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Bind9
    # تولید فایل زون Bind9 بر اساس اطلاعات inventory
    - name: Ensure Bind9 config directory exists
      ansible.builtin.file:
        path: "tools/etc/bind"
        state: directory
        mode: '0755'

    - name: Generate Bind9 zone file from template
      ansible.builtin.template:
        src: template/zonefile.j2
        dest: "tools/etc/bind/db.{{ domain }}"
        owner: root
        group: root
        mode: '0644'
      vars:
        soa_email: "admin.{{ domain | replace('.', '\\.') }}"
        ttl: 3600
        ns_record: "ns1.{{ domain }}."
        origin: "{{ domain }}"

    - name: Copy Bind9 named.conf
      ansible.builtin.copy:
        src: template/bind9/named.conf
        dest: "tools/etc/bind/named.conf"
        owner: root
        group: root
        mode: '0644'

    - name: Generate bind9.yml from template
      ansible.builtin.template:
        src: template/bind9.yml.j2
        dest: tools/bind9.yml
        owner: root
        group: root
        mode: '0644'

    - name: Set up Bind9 using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - bind9.yml
        state: present
        pull: always
        recreate: auto

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Traefik
    - name: Generate traefik.yml from template
      ansible.builtin.template:
        src: template/traefik.yml.j2
        dest: tools/traefik.yml
        owner: root
        group: root
        mode: '0644'

    - name: Set up Traefik using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - traefik.yml
        state: present
        pull: always
        recreate: auto
      environment:
        PATH: "/root/.docker/cli-plugins:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

    # شبکه Docker traefik_reverse_proxy ایجاد کنید
    - name: Create traefik_reverse_proxy Docker network
      community.docker.docker_network:
        name: traefik_reverse_proxy
        state: present

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Portainer
    - name: Generate portainer.yml from template
      ansible.builtin.template:
        src: template/portainer.yml.j2
        dest: tools/portainer.yml
        owner: root
        group: root
        mode: '0644'
      when: install_portainer is true

    - name: Set up Portainer using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - portainer.yml
        state: present
        pull: always
        recreate: auto
      when: install_portainer is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SonarQube
    - name: Generate sonarqube.yml from template
      ansible.builtin.template:
        src: template/sonarqube.yml.j2
        dest: tools/sonarqube.yml
        owner: root
        group: root
        mode: '0644'
      when: install_sonarqube is true

    - name: Set up SonarQube using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - sonarqube.yml
        state: present
        pull: always
        recreate: auto
      when: install_sonarqube is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Nexus
    - name: Generate nexus.yml from template
      ansible.builtin.template:
        src: template/nexus.yml.j2
        dest: tools/nexus.yml
        owner: root
        group: root
        mode: '0644'
      when: install_nexus is true

    - name: Set up Nexus using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - nexus.yml
        state: present
        pull: always
        recreate: auto
      when: install_nexus is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ RabbitMQ
    - name: Generate rabbitmq.yml from template
      ansible.builtin.template:
        src: template/rabbitmq.yml.j2
        dest: tools/rabbitmq.yml
        owner: root
        group: root
        mode: '0644'
      when: install_rabbitmq is true

    - name: Set up RabbitMQ using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - rabbitmq.yml
        state: present
        pull: always
        recreate: auto
      when: install_rabbitmq is true

    - name: Enable RabbitMQ management plugin
      community.docker.docker_container_exec:
        container: rabbitmq
        command: rabbitmq-plugins enable rabbitmq_management
      when: install_rabbitmq is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Apprise
    - name: Generate apprise.yml from template
      ansible.builtin.template:
        src: template/apprise.yml.j2
        dest: tools/apprise.yml
        owner: root
        group: root
        mode: '0644'
      when: install_apprise is true

    - name: Set up Apprise using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - apprise.yml
        state: present
        pull: always
        recreate: auto
      when: install_apprise is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Uptime Kuma
    - name: Generate uptime_kuma.yml from template
      ansible.builtin.template:
        src: template/uptime_kuma.yml.j2
        dest: tools/uptime_kuma.yml
        owner: root
        group: root
        mode: '0644'
      when: install_uptime_kuma is true

    - name: Set up Uptime Kuma using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - uptime_kuma.yml
        state: present
        pull: always
        recreate: auto
      when: install_uptime_kuma is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Splunk
    - name: Generate splunk.yml from template
      ansible.builtin.template:
        src: template/splunk.yml.j2
        dest: tools/splunk.yml
        owner: root
        group: root
        mode: '0644'
      when: install_splunk is true

    - name: Set up Splunk using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - splunk.yml
        state: present
        pull: always
        recreate: auto
      when: install_splunk is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Grafana
    - name: Generate grafana.yml from template
      ansible.builtin.template:
        src: template/grafana.yml.j2
        dest: tools/grafana.yml
        owner: root
        group: root
        mode: '0644'
      when: install_grafana is true

    - name: Set up Grafana using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - grafana.yml
        state: present
        pull: always
        recreate: auto
      when: install_grafana is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Pometheus
    - name: Generate prometheus.yml from template
      ansible.builtin.template:
        src: template/prometheus.yml.j2
        dest: tools/prometheus.yml
        owner: root
        group: root
        mode: '0644'
      when: install_prometheus is true

    - name: Set up Pometheus using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - prometheus.yml
        state: present
        pull: always
        recreate: auto
      when: install_prometheus is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Dozzle
    - name: Generate dozzle.yml from template
      ansible.builtin.template:
        src: template/dozzle.yml.j2
        dest: tools/dozzle.yml
        owner: root
        group: root
        mode: '0644'
      when: install_dozzle is true

    - name: Set up Dozzle using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - dozzle.yml
        state: present
        pull: always
        recreate: auto
      when: install_dozzle is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Shortcut
    - name: Generate shortcut.yml from template
      ansible.builtin.template:
        src: template/shortcut.yml.j2
        dest: tools/shortcut.yml
        owner: root
        group: root
        mode: '0644'
      when: install_shortcut is true

    - name: Set up Shortcut using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - shortcut.yml
        state: present
        pull: always
        recreate: auto
      when: install_shortcut is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ DrawDB
    - name: Generate drawdb.yml from template
      ansible.builtin.template:
        src: template/drawdb.yml.j2
        dest: tools/drawdb.yml
        owner: root
        group: root
        mode: '0644'
      when: install_drawdb is true

    - name: Set up DrawDB using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - drawdb.yml
        state: present
        pull: always
        recreate: auto
      when: install_drawdb is true

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Draw.io
    - name: Generate drawio.yml from template
      ansible.builtin.template:
        src: template/drawio.yml.j2
        dest: tools/drawio.yml
        owner: root
        group: root
        mode: '0644'
      when: install_drawio is true

    - name: Set up Draw.io using Docker Compose
      community.docker.docker_compose_v2:
        project_src: tools
        files:
          - drawio.yml
        state: present
        pull: always
        recreate: auto
      when: install_drawio is true
